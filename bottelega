import telebot
import webbrowser
from telebot import types


bot = telebot.TeleBot('6808958835:AAGv7LuFGNdnIa-oAkRvXq3JnZBrWPMrg5g')


 #{message.from_user.first_name} имя пользователя
#1 ответит если отправить какой либо файл   users
'''@bot.message_handler(content_types=['photo','audio',"video"])
def lala(message):
    bot.reply_to(message, 'Такой тип файла не поддерживается!!!')'''

'''
#2 ответ на команды со знаком /
@bot.message_handler(commands=['start'])
# sql - import sqlite3
def start(message):
    conn = sqlite3.connect('my_home.sql')
    cur = conn.cursor()
    
    cur.execute('CREATE TABLE IF NOT EXISTS users(id int auto_increments primary key, name varchar(50), pass varchar(50))')
    conn.commit()
    cur.close()
    conn.close()
    bot.send_message(message.chat.id,f'Приветик я бот \n Мы вас сейчас зарегестрируем. Введите ваше имя') 
    bot.register_next_step_handler(message, user_name)
    
def user_name (message)   :
    global name
    name = message.text.strip() 
    bot.send_message(message.chat.id, 'Введите пароль')
    bot.register_next_step_handler(message, user_pass)  
     
def user_pass(message):
    password = message.text.strip() 
    conn = sqlite3.connect('my_home.sql')
    cur = conn.cursor()
    
    cur.execute('INSERT INTO users (name, pass) VALUES ("%s", "%s")' % (name, password))
    conn.commit()
    cur.close()
    conn.close()
    markup = types.InlineKeyboardMarkup()
    markup.add (types.InlineKeyboardButton('Список пользоватлей', callback_data = "users"))
    bot.send_message(message.chat.id, 'Пользователь зарегестрирован!', reply_markup=markup)  
    
    
@bot.callback_query_handler(func = lambda call: True) 
def callback(call):
    conn = sqlite3.connect('my_home.sql')
    cur = conn.cursor()
    
    cur.execute('SELECT * FROM users')
    users = cur.fetchall()
    
    info =''
    for el in users:
        info += f'Name: {el[1]}, password: {el[2]} \n'
    cur.close()
    conn.close()
    bot.send_message(call.message.chat.id, info)
'''


    
'''@bot.message_handler(commands=['help'])
def carname(message):
    bot.send_message(message.chat.id,'Тут <b>мы</b> безсильны, <em>сори</em>',parse_mode ='html')  
#3 покажет инфу об акк
@bot.message_handler(commands=['star'])
def carname(message):
    bot.send_message(message.chat.id, message)
#\n
#4 import webbrowser - открытие сайта
@bot.message_handler(commands=['site','website'])
def site(message):
    webbrowser.open('http://127.0.0.1:5500/unknown.html/unknown.html')


# кнопки на сообщ
@bot.message_handler(content_types=['photo'])
def llll(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton('Go to website', url='https://google.com')
    markup.row(btn1)
    btn2 = types.InlineKeyboardButton('Delete the pic', callback_data='delete')
    btn3 = types.InlineKeyboardButton('Edit the message', callback_data='edit')
    markup.row(btn2,btn3)
    bot.reply_to(message, 'Neeews!!!!!!', reply_markup=markup)
# обработка callback_data
'''
'''@bot.add_callback_query_handler(lambda callback: True)
def callback_message(callback):
    if callback.data == 'delete':
        bot.delete_message(callback.message.chat.id, callback.message_id - 1)
    elif callback.data == 'edit':
        bot.edit_message_text('Edit text',callback.message.chat.id, callback.message_id)'''
'''
# кнопки
@bot.message_handler(commands = ['day'])
def day(message):
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('Go to website')
    markup.row(btn1)
    btn2 = types.KeyboardButton('Delete the pic')
    btn3 = types.KeyboardButton('Edit the message')
    markup.row(btn2,btn3)
    bot.send_message(message.chat.id, 'hello', reply_markup=markup)

    bot.register_next_step_handler(message, on_click)
def on_click(message) :
    if message.text == 'Go to website':
        bot.send_message(message.chat.id, 'Website is open')
    elif message.text == 'Delete the pic'  :
        bot.send_message(message.chat.id, 'Deleted')
    elif  message.text == 'Edit the message'  :
        bot.send_message(message.chat.id, 'Edited')   
       


# ответ на сообщ пользователя
@bot.message_handler()
def info(message):
    if message.text.lower() == 'привет' :
        bot.send_message(message.chat.id,f'Привет {message.from_user.first_name}')  
    elif message.text.lower() == 'id':
        bot.reply_to(message,f'Ваш ID = {message.from_user.id}')
    elif message.text.lower =='ты любишь пельмени?':
        bot.send_message('Да очень люблю а ты')'''

 
  
#bot.infinity_polling()    
